name: CI
on:
    pull_request:
    push:
        branches:
            - master
        tags:
            - 'v*.*.*'
    workflow_dispatch:        
env:
  IMAGE_NAME: index.docker.io/metacall/faas
jobs:
    ci:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup MetaCall CLI
              run: wget -O - https://raw.githubusercontent.com/metacall/install/master/install.sh | sh

            - name: Setup NodeJS
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  registry-url: https://registry.npmjs.org

            - name: Update NPM
              run: npm install -g npm@latest

            - name: Installing Dependencies
              run: npm i

            - name: Lint
              run: npm run lint

            - name: Build
              run: npm run build

            # TODO: Have working unit tests generated
            # - name: Run Unit Tests
            #   run: |
            #       npm run test

            # Integration tests, first docker compose up runs the normal test.
            # The second one runs the test without deleting the FaaS container,
            # and the environment varialbe TEST_FAAS_STARTUP_DEPLOY forces the
            # test to avoid deploying again all the deployments. By this we are
            # testing if the startup initialization works because the deployments
            # are persisted from the previous run.
            - name: Run Integration Tests
              shell: bash
              run: |
                  docker compose build
                  NODE_ENVIRONMENT=deployment TEST_FAAS_DEPENDENCY_DEPLOY=true docker compose up --exit-code-from test
                  TEST_FAAS_STARTUP_DEPLOY=true TEST_FAAS_DEPENDENCY_DEPLOY=true NODE_ENVIRONMENT=deployment docker compose up --exit-code-from test
                  docker compose down

            - name: Publish npm package
              uses: JS-DevTools/npm-publish@v3
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  access: 'public'
                  token: ${{ secrets.NPM_AUTH_TOKEN }}


            # Build and push the docker image to DockerHub
            - name: Set up Docker Buildx #  to be able to build multi-platform images, export cache, etc.
              if: startsWith(github.ref, 'refs/tags/')
              uses: docker/setup-buildx-action@v1

            - name: Login to DockerHub #  will take care to log in against a Docker registry
              uses: docker/login-action@v1 
              if: startsWith(github.ref, 'refs/tags/')
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            - name: Build and push # will build and push the Docker image to the registry
              uses: docker/build-push-action@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                context: .
                file: ./Dockerfile-faas
                push: true
                tags: metacall/faas:latest
